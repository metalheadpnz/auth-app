{"ast":null,"code":"import { setError, setIsAuth } from \"../reducers/appReducer\";\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { LOGIN, newsURL, PASSWORD } from \"../../constants/constants\";\nimport axios from \"axios\";\nexport const setAuthData = createAsyncThunk('SET_AUTH_DATA', (loginData, thunkAPI) => {\n  if (loginData.login === LOGIN && loginData.password === PASSWORD) {\n    thunkAPI.dispatch(setError(false));\n    thunkAPI.dispatch(setIsAuth(true));\n    localStorage.setItem('isAuth', 'true');\n  } else {\n    thunkAPI.dispatch(setError(true));\n    thunkAPI.dispatch(setIsAuth(false));\n    localStorage.setItem('isAuth', 'false');\n  }\n});\nexport const getAuthDataFromLS = createAsyncThunk('GET_AUTH_DATA_FROM_LS', (_, thunkAPI) => {\n  return localStorage.getItem('isAuth');\n});\nexport const setLogOff = createAsyncThunk('SET_LOG_OFF', (_, thunkAPI) => {\n  localStorage.setItem('isAuth', 'false');\n  thunkAPI.dispatch(setIsAuth(false));\n});\nexport const getNews = createAsyncThunk('GET_NEWS', async (_, thunkAPI) => {\n  const response = await axios.get(newsURL);\n  return response.data;\n});","map":{"version":3,"names":["setError","setIsAuth","createAsyncThunk","LOGIN","newsURL","PASSWORD","axios","setAuthData","loginData","thunkAPI","login","password","dispatch","localStorage","setItem","getAuthDataFromLS","_","getItem","setLogOff","getNews","response","get","data"],"sources":["/Users/andrejpolakov/WebstormProjects/auth-app/src/store/thunk/appActionCreators.ts"],"sourcesContent":["import {setError, setIsAuth} from \"../reducers/appReducer\";\nimport {AppDispatch, RootState} from \"../store\";\nimport {createAsyncThunk} from \"@reduxjs/toolkit\";\nimport {LOGIN, newsURL, PASSWORD} from \"../../constants/constants\";\nimport axios from \"axios\";\nimport {LoginPasswordType, NewsData} from \"../types\";\n\ntype AsyncThunkConfig = {\n    state: RootState,\n    dispatch: AppDispatch,\n}\n\nexport const setAuthData = createAsyncThunk<void, LoginPasswordType, AsyncThunkConfig>\n('SET_AUTH_DATA', (loginData: LoginPasswordType, thunkAPI) => {\n    if (loginData.login === LOGIN && loginData.password === PASSWORD) {\n        thunkAPI.dispatch(setError(false))\n        thunkAPI.dispatch(setIsAuth(true))\n        localStorage.setItem('isAuth', 'true')\n    } else {\n        thunkAPI.dispatch(setError(true))\n        thunkAPI.dispatch(setIsAuth(false))\n        localStorage.setItem('isAuth', 'false')\n    }\n})\n\nexport const getAuthDataFromLS = createAsyncThunk<string | null, void, AsyncThunkConfig>\n('GET_AUTH_DATA_FROM_LS', (_, thunkAPI) => {\n    return localStorage.getItem('isAuth')\n})\n\nexport const setLogOff = createAsyncThunk<void, void, AsyncThunkConfig>\n('SET_LOG_OFF', (_, thunkAPI) => {\n    localStorage.setItem('isAuth', 'false')\n    thunkAPI.dispatch(setIsAuth(false))\n})\n\nexport const getNews = createAsyncThunk<NewsData[], void, AsyncThunkConfig>\n('GET_NEWS', async (_, thunkAPI) => {\n    const response = await axios.get<any>(newsURL)\n    return response.data\n})\n"],"mappings":"AAAA,SAAQA,QAAQ,EAAEC,SAAS,QAAO,wBAAwB;AAE1D,SAAQC,gBAAgB,QAAO,kBAAkB;AACjD,SAAQC,KAAK,EAAEC,OAAO,EAAEC,QAAQ,QAAO,2BAA2B;AAClE,OAAOC,KAAK,MAAM,OAAO;AAQzB,OAAO,MAAMC,WAAW,GAAGL,gBAAgB,CAC1C,eAAe,EAAE,CAACM,SAA4B,EAAEC,QAAQ,KAAK;EAC1D,IAAID,SAAS,CAACE,KAAK,KAAKP,KAAK,IAAIK,SAAS,CAACG,QAAQ,KAAKN,QAAQ,EAAE;IAC9DI,QAAQ,CAACG,QAAQ,CAACZ,QAAQ,CAAC,KAAK,CAAC,CAAC;IAClCS,QAAQ,CAACG,QAAQ,CAACX,SAAS,CAAC,IAAI,CAAC,CAAC;IAClCY,YAAY,CAACC,OAAO,CAAC,QAAQ,EAAE,MAAM,CAAC;EAC1C,CAAC,MAAM;IACHL,QAAQ,CAACG,QAAQ,CAACZ,QAAQ,CAAC,IAAI,CAAC,CAAC;IACjCS,QAAQ,CAACG,QAAQ,CAACX,SAAS,CAAC,KAAK,CAAC,CAAC;IACnCY,YAAY,CAACC,OAAO,CAAC,QAAQ,EAAE,OAAO,CAAC;EAC3C;AACJ,CAAC,CAAC;AAEF,OAAO,MAAMC,iBAAiB,GAAGb,gBAAgB,CAChD,uBAAuB,EAAE,CAACc,CAAC,EAAEP,QAAQ,KAAK;EACvC,OAAOI,YAAY,CAACI,OAAO,CAAC,QAAQ,CAAC;AACzC,CAAC,CAAC;AAEF,OAAO,MAAMC,SAAS,GAAGhB,gBAAgB,CACxC,aAAa,EAAE,CAACc,CAAC,EAAEP,QAAQ,KAAK;EAC7BI,YAAY,CAACC,OAAO,CAAC,QAAQ,EAAE,OAAO,CAAC;EACvCL,QAAQ,CAACG,QAAQ,CAACX,SAAS,CAAC,KAAK,CAAC,CAAC;AACvC,CAAC,CAAC;AAEF,OAAO,MAAMkB,OAAO,GAAGjB,gBAAgB,CACtC,UAAU,EAAE,OAAOc,CAAC,EAAEP,QAAQ,KAAK;EAChC,MAAMW,QAAQ,GAAG,MAAMd,KAAK,CAACe,GAAG,CAAMjB,OAAO,CAAC;EAC9C,OAAOgB,QAAQ,CAACE,IAAI;AACxB,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}